{"version":3,"sources":["ws (ignored)","./src/app/Pages/change-avatar/change-avatar.component.ts","./src/app/Pages/change-avatar/change-avatar.component.html","./src/app/Services/token-interceptor.service.ts","./src/environments/environment.ts","./src/app/Pages/edit-profile/edit-profile.component.ts","./src/app/Pages/edit-profile/edit-profile.component.html","./src/app/Services/change-avatar.service.ts","./src/app/Pages/home/home.component.ts","./src/app/Pages/home/home.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/Pages/register/register.component.ts","./src/app/Pages/register/register.component.html","./src/app/Pages/login/login.component.ts","./src/app/Pages/login/login.component.html","./src/app/Services/websocket.service.ts","./src/app/Services/auth.service.ts","./src/app/app.module.ts","./src/app/Services/profile.service.ts","./src/app/Services/edit-profile.service.ts","./src/app/Guard/auth.guard.ts","./src/app/Pages/profile/profile.component.ts","./src/app/Pages/profile/profile.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","import { Component, OnInit } from '@angular/core';\nimport { ChangeAvatarService } from \"../../Services/change-avatar.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-change-avatar',\n  templateUrl: './change-avatar.component.html',\n  styleUrls: ['./change-avatar.component.css']\n})\nexport class ChangeAvatarComponent implements OnInit {\n\n    constructor(\n      private _changeAvatarService: ChangeAvatarService,\n      private _router: Router\n    ) { }\n\n    ngOnInit(): void {\n    }\n\n    ChangeAvatar(event: any){\n      const avatar = event.target.files[0];\n      console.log(avatar);\n\n      const formdata = new FormData();\n      formdata.append('avatar', avatar)\n\n      this._changeAvatarService.ChangeAvatar(formdata)\n        .subscribe(\n          res => {\n            console.log(res);\n            this._router.navigate(['/profile']);\n          },\n          err => console.log(err)\n        )\n    }\n}\n","<form class=\"\" action=\"\" method=\"post\" enctype=\"multipart/form-data\">\n        <input type=\"file\" (change)= \"ChangeAvatar($event)\" name=\"avatar\" value=\"\"  >\n    </form>\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from \"@angular/common/http\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private injector: Injector) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler){\n    let authService = this.injector.get(AuthService);\n    let tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${authService.getToken()}`\n      }\n    })\n    return next.handle(tokenizedReq)\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { EditProfileService } from \"../../Services/edit-profile.service\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n    alertError: boolean = false;\n    errCatching = '';\n\n    editUserProfile = {\n      'userId': '',\n      'name': '',\n      'password': '',\n      'phone': ''\n    };\n\n    hide: boolean = false;\n\n    constructor(\n        private _formBuilder: FormBuilder,\n        private _router: Router,\n        private _editProfileService: EditProfileService\n    ) { }\n\n    ngOnInit(): void {\n    }\n\n    editProfileForm: FormGroup = this._formBuilder.group({\n        name : new FormControl('', [Validators.required]),\n        userId : new FormControl('', [Validators.required]),\n        phone : new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n        confirmPassword: new FormControl('', [Validators.required, Validators.minLength(6)])\n      });\n\n      onEditProfile() {\n        if (!this.editProfileForm.valid) {\n          return;\n        }\n        this.EditProfile();\n      }\n\n      EditProfile(){\n        if(this.editProfileForm.value.password !== this.editProfileForm.value.confirmPassword){\n          this.alertError = true;\n          this.errCatching = \"Passwords don't match\";\n        }else{\n          this.editUserProfile = this.editProfileForm.value;\n          this._editProfileService.EditProfile(this.editUserProfile)\n          .subscribe(\n            res => {\n              console.log(res);\n              this._router.navigate(['/profile']);\n            },\n            err => {\n              console.log(err);\n              this.alertError = true;\n              this.errCatching = err.error;\n              console.log(this.errCatching);\n            }\n          )\n        }\n\n      }\n}\n","\n<mat-card>\n    <mat-card-content>\n      <div class=\"header\" header>\n        <!-- Alert login -->\n        <div class=\"alert alert-info alert-dismissable\" *ngIf=\"alertError\">\n          <a class=\"panel-close close\" data-dismiss=\"alert\">×</a>\n          <i class=\"fa fa-coffee\"></i>\n          {{errCatching}}\n        </div>\n\n        <P>Edit your profile</P>\n      </div>\n      <form (ngSubmit)=\"onEditProfile()\" name=\"editProfileForm\" [formGroup]=\"editProfileForm\">\n        <div>\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Name</mat-label>\n            <input\n              formControlName=\"name\"\n              matInput\n              placeholder=\"Enter Name\" required\n            />\n            <mat-error *ngIf=\"!editProfileForm.controls['name'].valid\">\n                Name is required\n              </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"userIdInput\">\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>User ID</mat-label>\n            <input\n              formControlName=\"userId\"\n              matInput\n              placeholder=\"Enter User ID\" required\n            />\n            <mat-error *ngIf=\"!editProfileForm.controls['userId'].valid\">\n                User ID is required\n              </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"phoneInput\">\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Phone</mat-label>\n            <input\n              formControlName=\"phone\"\n              matInput\n              placeholder=\"Enter phone\" required\n            />\n            <mat-error *ngIf=\"!editProfileForm.controls['phone'].valid\">\n                phone is required\n              </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div>\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input formControlName=\"password\" matInput [type]=\" hide ? 'password' : 'text'\" required />\n            <button  mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide Password'\"\n            [attr.aria-pressed]=\"hide\">\n            <mat-icon>\n                {{hide ? 'visibility_off' : 'visibility'}}\n            </mat-icon>\n        </button>\n        <mat-error *ngIf=\"!editProfileForm.controls['password'].valid\">\n            Password is required\n          </mat-error>\n        </mat-form-field>\n        </div>\n\n        <div>\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Confirm Password</mat-label>\n            <input formControlName=\"confirmPassword\" matInput [type]=\" hide ? 'password' : 'text'\" required />\n            <button  mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide Password'\"\n            [attr.aria-pressed]=\"hide\">\n            <mat-icon>\n                {{hide ? 'visibility_off' : 'visibility'}}\n            </mat-icon>\n        </button>\n        <mat-error *ngIf=\"!editProfileForm.controls['confirmPassword'].valid\">\n            Confirm Password is required\n          </mat-error>\n        </mat-form-field>\n        </div>\n\n        <button mat-flat-button color=\"primary\">submit</button>\n        <button mat-stroked-button color=\"basic\" routerLink = \"/profile\">cancel</button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChangeAvatarService {\n\n  private _changeAvatarUrl = \"http://localhost:8080/api/change-avatar\";\n\n  constructor(\n  private http: HttpClient\n  ) { }\n\n  ChangeAvatar(avatar: any){\n    return this.http.post<any>(this._changeAvatarUrl, avatar);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { WebsocketService } from \"../../Services/websocket.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n    showSomething: any;\n\n    constructor(private websocketService: WebsocketService){ }\n\n    ngOnInit() {\n      this.websocketService.listen(\"Server-sent-data\").subscribe((data:any)=>{\n        this.showSomething = data;\n        console.log(this.showSomething);\n      })\n    }\n\n}\n","<h1> Socket.io 2.3.0 ESP 8266 Show Information - Realtime Weather Forecast</h1>\r\n\r\n<div class=\"container\" id=\"chat-content\">\r\n  <div style=\"border: solid 1px black\">\r\n    {{showSomething}}\r\n  </div>\r\n</div>\r\n","<mat-toolbar color=\"primary\" class=\"mat-elevation-z8\">\n  <button mat-icon-button>\n    <mat-icon (click)=\"sidenav.open()\">menu</mat-icon>\n  </button>\n\n  <span> <mat-icon> cloud </mat-icon> RWF </span>\n\n  <div class=\"spacer\"></div>\n\n  <a mat-button [routerLink]=\"['/']\" > Home </a>\n  <a mat-button [routerLink]=\"['/profile']\" [routerLinkActive]=\"'active-link'\"> Profile </a>\n  <a mat-button [routerLink]=\"['/login']\" [routerLinkActive]=\"'active-link'\" *ngIf=\"!_authService.loggedIn()\"> Login </a>\n  <a mat-button [routerLink]=\"['/register']\" [routerLinkActive]=\"'active-link'\" *ngIf=\"!_authService.loggedIn()\"> Sign Up </a>\n  <a mat-raised-button color=\"accent\" (click)=\"_authService.logoutUser()\" *ngIf=\"_authService.loggedIn()\"> Logout </a>\n</mat-toolbar>\n\n<mat-sidenav-container>\n  <mat-sidenav #sidenav mode = \"push\" [(opened)]=\"opened\">\n    <mat-nav-list>\n      <a mat-list-item [routerLink]=\"['/']\">\n        <mat-icon mat-list-icon> home </mat-icon> Home\n      </a>\n      <a mat-list-item [routerLink]=\"['/profile']\">\n        <mat-icon mat-list-icon> person </mat-icon> Profile\n      </a>\n      <a mat-list-item *ngIf=\"!_authService.loggedIn()\" [routerLink]=\"['/login']\">\n        <mat-icon mat-list-icon> login </mat-icon> Login\n      </a>\n      <a mat-list-item *ngIf=\"!_authService.loggedIn()\"[routerLink]=\"['/register']\">\n        <mat-icon mat-list-icon> app_registration </mat-icon> Sign Up\n      </a>\n      <a mat-list-item *ngIf=\"_authService.loggedIn()\" (click)=\"_authService.logoutUser()\">\n        <mat-icon mat-list-icon> logout </mat-icon> Logout\n      </a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <div id=\"main-content\">\n      <router-outlet></router-outlet>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component } from '@angular/core';\nimport { AuthService } from \"./Services/auth.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  opened:boolean = false;\n\n  constructor(public _authService: AuthService) { }\n\n  title = 'Api';\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { AuthService } from \"../../Services/auth.service\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n    alertError: boolean = false;\n    errCatching = '';\n\n    registerUserData = {\n    'name': '',\n    'email': '',\n    'password': '',\n    'confirmPassword': ''\n    };\n\n    hide: boolean = false;\n\n    constructor(\n      private _auth: AuthService,\n      private _router: Router,\n      private _formBuilder: FormBuilder\n    ) { }\n\n    ngOnInit(): void {\n    }\n\n    registerForm: FormGroup = this._formBuilder.group({\n        name : new FormControl('', [Validators.required]),\n        email : new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n        confirmPassword: new FormControl('', [Validators.required, Validators.minLength(6)])\n      });\n\n      onRegister() {\n        if (!this.registerForm.valid) {\n          return;\n        }\n        this.registerUser();\n      }\n\n      registerUser(){\n        if(this.registerForm.value.password !== this.registerForm.value.confirmPassword){\n          this.alertError = true;\n          this.errCatching = \"Passwords don't match\";\n        }else{\n          this.registerUserData = this.registerForm.value;\n          this._auth.registerUser(this.registerUserData)\n          .subscribe(\n            res => {\n              console.log(res);\n              localStorage.setItem('token', res.token);\n              this._router.navigate(['/profile']);\n            },\n            err => {\n            console.log(err);\n            this.alertError = true;\n            this.errCatching = err.error;\n            console.log(this.errCatching);\n          }\n          )\n        }\n      }\n\n\n}\n","<mat-card>\n    <mat-card-content>\n      <div class=\"header\" header>\n        <!-- Alert login -->\n        <div class=\"alert alert-info alert-dismissable\" *ngIf=\"alertError\">\n          <a class=\"panel-close close\" data-dismiss=\"alert\">×</a>\n          <i class=\"fa fa-coffee\"></i>\n          {{errCatching}}\n        </div>\n\n        <P>Sign Into Your Account </P>\n      </div>\n      <form (ngSubmit)=\"onRegister()\" name=\"registerForm\" [formGroup]=\"registerForm\">\n\n        <div>\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Name</mat-label>\n            <input\n              formControlName=\"name\"\n              matInput\n              placeholder=\"Enter Name\" required\n            />\n            <mat-error *ngIf=\"!registerForm.controls['name'].valid\">\n                Name is required\n              </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"emailInput\">\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Email</mat-label>\n            <input\n              formControlName=\"email\"\n              matInput\n              placeholder=\"Enter email address\" required\n            />\n            <mat-error *ngIf=\"!registerForm.controls['email'].valid\">\n                Email is required\n              </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div>\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input formControlName=\"password\" matInput [type]=\" hide ? 'password' : 'text'\" required />\n            <button  mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide Password'\"\n            [attr.aria-pressed]=\"hide\">\n            <mat-icon>\n                {{hide ? 'visibility_off' : 'visibility'}}\n            </mat-icon>\n        </button>\n        <mat-error *ngIf=\"!registerForm.controls['password'].valid\">\n            Password is required\n          </mat-error>\n        </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Confirm Password</mat-label>\n            <input formControlName=\"confirmPassword\" matInput [type]=\" hide ? 'password' : 'text'\" required />\n            <button  mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide Password'\"\n            [attr.aria-pressed]=\"hide\">\n            <mat-icon>\n                {{hide ? 'visibility_off' : 'visibility'}}\n            </mat-icon>\n        </button>\n        <mat-error *ngIf=\"!registerForm.controls['confirmPassword'].valid\">\n            Confirm Password is required\n          </mat-error>\n        </mat-form-field>\n        </div>\n        <button mat-flat-button color=\"primary\">Login</button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { AuthService } from \"../../Services/auth.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  alertError: boolean = false;\n  errCatching = '';\n\n  loginUserData = {\n  'email': '',\n  'password': ''\n  };\n\n  hide: boolean = false;\n\n  constructor(\n      private _formBuilder: FormBuilder,\n      private _auth: AuthService,\n      private _router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  loginForm: FormGroup = this._formBuilder.group({\n      email : new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n\n    onLogin() {\n      if (!this.loginForm.valid) {\n        return;\n      }\n      this.loginUser();\n    }\n\n    loginUser(){\n    this.loginUserData = this.loginForm.value;\n    this._auth.loginUser(this.loginUserData)\n    .subscribe(\n      res => {\n        console.log(res);\n        localStorage.setItem('token', res.token);\n        this._router.navigate(['/profile']);\n      },\n      err => {\n        console.log(err);\n        this.alertError = true;\n        this.errCatching = err.error;\n        console.log(this.errCatching);\n      }\n    )\n    }\n\n}\n","\r\n<mat-card>\r\n    <mat-card-content>\r\n      <div class=\"header\" header>\r\n        <!-- Alert login -->\r\n        <div class=\"alert alert-info alert-dismissable\" *ngIf=\"alertError\">\r\n          <a class=\"panel-close close\" data-dismiss=\"alert\">×</a>\r\n          <i class=\"fa fa-coffee\"></i>\r\n          {{errCatching}}\r\n        </div>\r\n\r\n        <P>Sign Into Your Account </P>\r\n      </div>\r\n      <form (ngSubmit)=\"onLogin()\" name=\"loginForm\" [formGroup]=\"loginForm\">\r\n        <div class=\"emailInput\">\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input\r\n              formControlName=\"email\"\r\n              matInput\r\n              placeholder=\"Enter email address\" required\r\n            />\r\n            <mat-error *ngIf=\"!loginForm.controls['email'].valid\">\r\n                Email is required\r\n              </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div>\r\n          <span>\r\n            <a class=\"text-link\" class=\"aLink\" routerLink=\"/auth/forgot-password\">Forgot Password?</a>\r\n          </span>\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Password</mat-label>\r\n            <input formControlName=\"password\" matInput [type]=\" hide ? 'password' : 'text'\" required />\r\n            <button  mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide Password'\"\r\n            [attr.aria-pressed]=\"hide\">\r\n            <mat-icon>\r\n                {{hide ? 'visibility_off' : 'visibility'}}\r\n            </mat-icon>\r\n        </button>\r\n        <mat-error *ngIf=\"!loginForm.controls['password'].valid\">\r\n            Password is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n        </div>\r\n        <button mat-flat-button color=\"primary\">Login</button>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client'\nimport { Observable } from 'rxjs/Observable';\nimport * as Rx from 'rxjs/Rx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  socket: any;\n  readonly url: string = \"localhost:8080\"\n\n  constructor(){\n    this.socket = io(this.url);\n  }\n\n  listen(eventName: string){\n    return Rx.Observable.create((subscriber:any)=>{\n      this.socket.on(eventName, (data: any)=>{\n        subscriber.next(data);\n      })\n    });\n  }\n\n  emit(eventName: string, data: any){\n    this.socket.emit(eventName, data);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  readonly _registerUrl = \"http://localhost:8080/api/register\";\n  readonly _loginUrl = \"http://localhost:8080/api/login\";\n\n  constructor(\n    private http: HttpClient,\n    private _router: Router\n  ) { }\n\n  registerUser(user: any){\n    return this.http.post<any>(this._registerUrl, user);\n  }\n\n  loginUser(user: any){\n    return this.http.post<any>(this._loginUrl, user);\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem('token');\n  }\n\n  logoutUser(){\n    localStorage.removeItem('token');\n    this._router.navigate(['/']);\n  }\n\n  getToken(){\n    return localStorage.getItem('token');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthService } from \"./Services/auth.service\";\nimport { AuthGuard } from \"./Guard/auth.guard\";\nimport { TokenInterceptorService } from \"./Services/token-interceptor.service\";\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSidenavModule  } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\nconst config: SocketIoConfig = { url: 'http://localhost:8080', options: {} };\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    SocketIoModule.forRoot(config),\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule\n  ],\n  providers: [\n    AuthService,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  private _profileUrl = \"http://localhost:8080/api/profile\";\n\n  constructor(\n    private http: HttpClient,\n    private _router: Router\n  ) { }\n\n  getUserProfile(){\n    return this.http.get<any>(this._profileUrl);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditProfileService {\n\n    private _editProfileUrl = \"http://localhost:8080/api/edit-profile\";\n    private _getEditProfileUrl = \"http://localhost:8080/api/profile\";\n\n  constructor(\n    private http: HttpClient,\n    private _router: Router\n  ) { }\n\n  EditProfile(user: any){\n    return this.http.post<any>(this._editProfileUrl, user);\n  }\n\n  getEditProfile(){\n    return this.http.get<any>(this._getEditProfileUrl);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from \"../Services/auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private _auth: AuthService,\n    private _router: Router\n  ) { }\n\n  canActivate(): boolean{\n    if (this._auth.loggedIn()){\n      return true;\n    }else{\n      this._router.navigate(['/login']);\n      return false;\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\n\nimport { ProfileService } from \"../../Services/profile.service\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\n\nexport class ProfileComponent implements OnInit {\n  userProfile = {\n    userId: String,\n    name: String,\n    email:String,\n    password: String,\n    phone: String,\n    avatar: String\n  };\n\n  constructor(\n    private _profileService: ProfileService,\n    private _router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this._profileService.getUserProfile()\n      .subscribe(\n        res => {\n          this.userProfile = res;\n          console.log(res);\n        },\n        err => console.log(err)\n    )\n  }\n}\n","<body>\r\n<div class=\"container emp-profile\" [ngModel] = \"userProfile\">\r\n            <form method=\"post\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"profile-img\">\r\n                            <img src=\"http://localhost:8080/public/upload/{{userProfile.avatar}}\" alt=\"\"/>\r\n                          <form class=\"\" action=\"\" method=\"post\">\r\n                            <div class=\"file btn btn-lg btn-primary\" routerLink=\"/change-avatar\">\r\n                                Change Photo\r\n                            </div>\r\n                          </form>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"profile-head\">\r\n                                    <h5>\r\n                                        {{userProfile.name}}\r\n                                    </h5>\r\n                                    <p class=\"proile-rating\"></p>\r\n                            <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n                                <li class=\"nav-item\">\r\n                                    <a class=\"nav-link active\" id=\"home-tab\" data-toggle=\"tab\" href=\"#home\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">About</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-2\">\r\n                      <button mat-stroked-button color=\"basic\" class=\"profile-edit-btn\" routerLink = \"/edit-profile\">Edit Profile</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"profile-work\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"tab-content profile-tab\" id=\"myTabContent\">\r\n                            <div class=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-6\">\r\n                                                <label>User Id</label>\r\n                                            </div>\r\n                                            <div class=\"col-md-6\">\r\n                                                <p>{{userProfile.userId}}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-6\">\r\n                                                <label>Name</label>\r\n                                            </div>\r\n                                            <div class=\"col-md-6\">\r\n                                                <p>{{userProfile.name}}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-6\">\r\n                                                <label>Email</label>\r\n                                            </div>\r\n                                            <div class=\"col-md-6\">\r\n                                                <p>{{userProfile.email}}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-6\">\r\n                                                <label>Phone</label>\r\n                                            </div>\r\n                                            <div class=\"col-md-6\">\r\n                                                <p>{{userProfile.phone}}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                        </div>\r\n                            </div>\r\n                            <div class=\"tab-pane fade\" id=\"profile\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-6\">\r\n                                                <label>Experience</label>\r\n                                            </div>\r\n                                            <div class=\"col-md-6\">\r\n                                                <p>Expert</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-6\">\r\n                                                <label>Hourly Rate</label>\r\n                                            </div>\r\n                                            <div class=\"col-md-6\">\r\n                                                <p>10$/hr</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-6\">\r\n                                                <label>Total Projects</label>\r\n                                            </div>\r\n                                            <div class=\"col-md-6\">\r\n                                                <p>230</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-6\">\r\n                                                <label>English Level</label>\r\n                                            </div>\r\n                                            <div class=\"col-md-6\">\r\n                                                <p>Expert</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-6\">\r\n                                                <label>Availability</label>\r\n                                            </div>\r\n                                            <div class=\"col-md-6\">\r\n                                                <p>6 months</p>\r\n                                            </div>\r\n                                        </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12\">\r\n                                        <label>Your Bio</label><br/>\r\n                                        <p>Your detail description</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n</body>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from \"@angular/common\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\nimport { HomeComponent } from './Pages/home/home.component';\nimport { ProfileComponent } from './Pages/profile/profile.component';\nimport { LoginComponent } from './Pages/login/login.component';\nimport { RegisterComponent } from './Pages/register/register.component';\nimport { EditProfileComponent } from './Pages/edit-profile/edit-profile.component';\nimport { ChangeAvatarComponent } from './Pages/change-avatar/change-avatar.component';\n\nimport { AuthGuard } from \"./Guard/auth.guard\";\n\nimport { MatSidenavModule  } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\nconst routes: Routes = [\n  {\n    path: 'profile',\n    component: ProfileComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'change-avatar',\n    component: ChangeAvatarComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'edit-profile',\n    component: EditProfileComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: '**',\n    component: HomeComponent\n  },\n];\n\n@NgModule({\n  declarations:[\n    HomeComponent,\n    ProfileComponent,\n    LoginComponent,\n    RegisterComponent,\n    EditProfileComponent,\n    ChangeAvatarComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes),\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatGridListModule\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}